{"version":3,"sources":["./src/app/constants/formValidationMessages.ts","./src/app/contact/contact-routing.module.ts","./src/app/contact/contact.module.ts","./src/app/contact/contact.page.ts","./src/app/providers/helper.service.ts","./src/app/contact/contact.page.scss","./src/app/contact/contact.page.html"],"names":[],"mappings":"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","file":"src_app_contact_contact_module_ts-es2015.js","sourcesContent":["export const CONTACT = {\n    first_name: {\n        required: 'First name is required'\n    },\n    last_name: {\n        required: 'Last name is required'\n    },\n    email: {\n        required: 'email is required',\n        email: 'email is invalid'\n    },\n    summary: {\n        required: 'summary is required'\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactPage } from './contact.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ContactPageRoutingModule } from './contact-routing.module';\n\nimport { ContactPage } from './contact.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ContactPageRoutingModule\n  ],\n  declarations: [ContactPage]\n})\nexport class ContactPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CONTACT } from '../constants/formValidationMessages';\nimport { HelperService } from '../providers/helper.service';\nimport { AngularFireFunctions } from '@angular/fire/functions';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.page.html',\n  styleUrls: ['./contact.page.scss'],\n})\nexport class ContactPage implements OnInit {\n\n  contactForm: FormGroup;\n  first_name: FormControl;\n  last_name: FormControl;\n  company: FormControl;\n  email: FormControl;\n  summary: FormControl;\n\n  inquiryType: string = '';\n  formError: any = {\n    first_name: '',\n    last_name: '',\n    company: '',\n    email: '',\n    summary: '',\n  };\n  validationMessage: any = CONTACT;\n\n  mail_res = '';\n  is_loading = false;\n\n  constructor(\n    private helperService: HelperService,\n    private functions: AngularFireFunctions,\n  ) { }\n\n  ngOnInit() {\n    this.createFormControl();\n    this.createForm();\n  }\n\n  onSubmit(){\n    this.is_loading = true;\n    console.log('submit');\n    const fname = this.contactForm.controls[\"first_name\"].value;\n    const lname = this.contactForm.controls[\"last_name\"].value;\n    const contact_email = this.contactForm.controls[\"email\"].value;\n    const org = this.contactForm.controls[\"company\"].value;\n    const description = this.contactForm.controls[\"summary\"].value;\n\n    const email_info = {\n      \"body\": \"first name: \"+ fname + \"\\nlast name: \" + lname +\n              \"\\nemail: \" + contact_email + \"\\ncompany: \" + org +\n              \"\\ndescription: \" + description\n    }\n    this.functions.httpsCallable(\"sendMail\")(email_info)\n      .subscribe(res => {\n        console.log(res);\n        this.mail_res = res;\n        this.is_loading = false;\n      })\n  }\n\n  createFormControl(){\n    this.first_name = new FormControl('', [Validators.required]),\n    this.last_name = new FormControl('', [Validators.required]),\n    this.email = new FormControl('', [Validators.required, Validators.email]),\n    this.company = new FormControl(''),\n    this.summary = new FormControl('', Validators.required)\n  }\n\n  createForm(){\n    this.contactForm = new FormGroup({\n      first_name: this.first_name,\n      last_name: this.last_name,\n      email: this.email,\n      company: this.company,\n      summary: this.summary\n    })\n    this.contactForm.valueChanges.subscribe(data => this.onFormValueChanged(data));\n  }\n\n  onFormValueChanged(data) {\n    this.formError = this.helperService.prepareValidationMessage(this.contactForm, this.validationMessage, this.formError)\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor() { }\n\n  prepareValidationMessage(form, validationMessage, formFields){\n    for (const field in formFields) {\n      formFields[field] = '';\n      const control = form.controls[field];\n      if (control && control.invalid) {\n        const messageObj = validationMessage[field];\n        for (const key in control.errors) {\n          formFields[field] = formFields[field] + messageObj[key] + ' ';\n        }\n      }\n    }\n    return formFields;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250YWN0LnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-left\\\">\\n      Contact Me\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<app-alert *ngIf=\\\"mail_res\\\" [message]=\\\"mail_res\\\" (close)=\\\"onClose()\\\"></app-alert>\\n<ion-content>\\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class=\\\"ion-text-center\\\">\\n              Contact Form\\n            </ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form [formGroup]=\\\"contactForm\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">First Name</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"first_name\\\"></ion-input>\\n              </ion-item>\\n              <div *ngIf=\\\"first_name.invalid && (first_name.dirty || first_name.touched)\\\" class=\\\"error-message\\\">{{formError.first_name}}</div>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"last_name\\\"></ion-input>\\n              </ion-item>\\n              <div *ngIf=\\\"last_name.invalid && (last_name.dirty || last_name.touched)\\\" class=\\\"error-message\\\">{{formError.last_name}}</div>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Email Address</ion-label>\\n                <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n              </ion-item>\\n              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"error-message\\\">{{formError.email}}</div>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Company</ion-label>\\n                <ion-input formControlName=\\\"company\\\"></ion-input>\\n                <!--<ion-label position=\\\"floating\\\">Inquiry Type</ion-label>\\n                <ion-select>\\n                  <ion-select-option value=\\\"bioinformatics\\\">Full Time Employment</ion-select-option>\\n                  <ion-select-option value=\\\"bioinformatics\\\">Contracting</ion-select-option>\\n                  <ion-select-option value=\\\"bioinformatics\\\">Contracting</ion-select-option>\\n                </ion-select>-->\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Summary</ion-label>\\n                <ion-textarea formControlName=\\\"summary\\\"></ion-textarea>\\n              </ion-item>\\n              <div *ngIf=\\\"summary.invalid && (summary.dirty || summary.touched)\\\" class=\\\"error-message\\\">{{formError.summary}}</div>\\n              <ion-button color=\\\"success\\\" expand=\\\"block\\\" class=\\\"ion-margin-top\\\" [disabled]=\\\"contactForm.invalid\\\" (click)=\\\"onSubmit()\\\">Submit\\n                <ion-spinner *ngIf=\\\"is_loading\\\"></ion-spinner>\\n              </ion-button>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}